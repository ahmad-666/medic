@import './colors.scss' ;
@mixin flex($dir,$mainAxis,$crossAxis,$wrap,$wrapBehave) {
    flex-direction: $dir ;
    justify-content: $mainAxis ;
    align-items: $crossAxis ;
    flex-wrap: $wrap ;
    align-content: $wrapBehave ;
}
@mixin bg($url,$pos,$repeat,$size){
    background: url($url) $pos $repeat ;
    background-size: $size ;
}
@mixin ellipse{
     white-space: nowrap ;
     overflow: hidden;
     text-overflow: ellipsis ;
}
@mixin multiEllipse($lineNum,$lineHeight,$ellipseColor){
    position: relative ;
    overflow: hidden;
    line-height: $lineHeight;
    max-height: $lineNum * $lineHeight ;
    text-align: justify; //we should not use text-align:center here  
    padding-left: 2em;
    padding-right: 0 ;
    .ellipse{
        color: $ellipseColor ; 
        position: absolute ;
        left: 0;
        bottom: 0 ;
        display: none ;
    }
    .ellipse.show{
        display: block ;
    }
}
@mixin fullSize{
    width: 100% ;
    height: 100%;
}
@mixin fullSize-abs{
    width: 100% ;
    height: 100%;
    top: 0 ;
    right: 0 ;
    position: absolute ;
}
@mixin center-x{
    position: absolute ;
    right: 50% ;
    transform: translateX(50%) ;
}
@mixin center-y{
    position: absolute ;
    top: 50% ;
    transform: translateY(-50%) ;
}
@mixin center-xy{
    position: absolute ;
    top: 50% ;
    right: 50% ;
    transform: translate(50%,-50%) ;
}
@mixin containerStyle{
    width: 80% ;
    height: auto;
    margin: $dist3 auto 0 auto ;
    padding: $dist2  ;
    background-color: $bgColor ;
    box-shadow: 0 0 1em .01em $shadowColor ;
    border-radius: $dist2 ;
}
@mixin pulse{
    position: relative ;
    &:hover {
        &::before,&::after{animation: pulse .5s linear 1 forwards ;}
        &::before{animation-delay: 0s ;}
        &::after{animation-delay: .3s ;}
    }
    &::before,&::after{
        content: '' ;
        width: 100% ;
        height: 100%;
        position: absolute ;
        top: 50% ;
        right: 50% ;
        transform: translate(50%,-50%) scale(1) ;
        border-radius: $dist3 ;
        background-color: transparent ;
        border: 1.2px solid $primaryColor ;
        opacity: 0;
    }
    @keyframes pulse {
        from{opacity: 1;}
        to{
            opacity: 0;
            transform: translate(50%,-50%) scale(1.5) ;
        }
    }
}
@mixin blackFilter{
    width: 100% ;
    height: 100vh;
    z-index: 10;
    background-color: $blackFilter ;
    position: fixed ;
    top: 0 ;
    right: 0 ;
    transition: all .3s linear ;
    opacity: 0;
    visibility: hidden ;
}
@mixin shadowS{box-shadow: 0 0 1em .05em rgba(175,175,175,.5);}
@mixin shadowL{box-shadow: 0 0 1.5em .1em rgba(135,135,135,.5);}
@mixin shadowBlurS{box-shadow: 0 0 2em .05em rgba(175,175,175,.5);}
@mixin shadowBlurL{box-shadow: 0 0 2.5em .2em rgba(135,135,135,.5);}
@mixin shadowBellow{box-shadow: 0 .3em 1em -.2em $shadowColor ;}
@mixin shadowPrimary{box-shadow: 0 .6em 1.7em -.5em $primaryColor ;}
@mixin scrollArrows{
    position: relative;
    .arrows{
        display: none ;
        width: auto ;
        height: auto;
        @include flex(row,flex-start,center,nowrap,"") ;
        position: absolute ;
        left: 0;
        bottom: 105% ;
        i{
            font-size: $fontL ;
            color: $primaryColor ;
            margin-right: .3em ;
            animation: arrowAnime .6s linear infinite alternate ;
            &:nth-child(1){animation-delay: 0 ;}
            &:nth-child(2){animation-delay: .3s ;}
            &:nth-child(3){animation-delay: .6s ;      
            }         
        }
        @keyframes arrowAnime {
            from{opacity: 0;}
            to{opacity: 1;}
        }     
    }
    .arrows.show{display: flex ;}
}

// @include resizeTablet(#container) ;
// @include resizeTablet(form+#login) ;
// @include resizeTablet(#wrapper) {
//     .something{color: red ;}
// }
// @include mediaQ-w(300px){
//     #wrapper{
//         width: 90% ;
//     }
// }
@mixin resizeTablet($wrapper){
    @media screen and (max-width:900px){
        #{$wrapper}{
            font-size: 8px ;
            @content ;
        }
    }  
}
@mixin resizeMobile($wrapper){
    @media screen and (max-width:600px){
        #{$wrapper}{
            font-size: 6px ;
            @content ;
        }
    }
}
@mixin mediaQ-w($maxWidth) {
    @media screen and (max-width: $maxWidth){@content ;}
}
@mixin mediaQ-h($maxHeight) {
    @media screen and (max-height: $maxHeight){@content ;}
}
@mixin mediaQ-wh($maxWidth,$maxHeight) {
    @media screen and (max-width: $maxWidth) and (max-height: $maxHeight){@content ;}
}